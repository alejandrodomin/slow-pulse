/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.apache.poi.ss.usermodel.Sheet;
import org.example.model.Complaint;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.example.factory.WorkbookFactory;
import org.example.factory.ComplaintFactory;

import java.util.List;
import java.util.Optional;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.nio.file.Paths;
import org.apache.poi.ss.usermodel.Workbook;

public class App {
    public static final Logger log = LoggerFactory.getLogger(App.class);
    public static final String DATASET_PATH = "app/src/main/resources/datasets.xlsx";

    public static void main(String[] args) {
        List<String> complaints = Stream.of(DATASET_PATH)
                .map(Paths::get)
                .map(WorkbookFactory::getWorkbook)
                .filter(Optional::isPresent)
                .map(Optional::get)
                .map(Workbook::sheetIterator)
                .map(iter -> Spliterators.spliteratorUnknownSize(iter, Spliterator.CONCURRENT))
                .flatMap(split -> StreamSupport.stream(split, false))
                .filter(sheet -> sheet.getSheetName().contains("Complaint"))
                .map(ComplaintFactory::toComplaints)
                .flatMap(List::stream)
                .map(Complaint::toString)
                .collect(Collectors.toList());

        log.info("Compiled {} complaints.", complaints.size());
    }
}
